# SimpleSIP

2017/1/1
・採用するデザインパターンを考えること	
・ソケット処理のサーバの実装を考えること	
・sip処理の適切なクラス関係を考えること

2017/1/20
・サーバ側の処理はRyuと同じくEventletを使う
・EventletはコルーチンライブラリのGreenletとノンブロッキングI/Oを組み合わせたネットワーク用のライブラリ。

コルーチン：サブルーチンがエントリーからリターンまでを一つの処理単位とするのに対し、コルーチンはいったん処理を中断した後、続きから処理を再開できる。 接頭辞 co は協調を意味するが、複数のコルーチンが中断・継続により協調動作を行うことによる。サブルーチンと異なり、状態管理を意識せずに行えるため、協調的処理、イテレータ、無限リスト、パイプなど、継続状況を持つプログラムが容易に記述できる。(wikipediaより抜粋)

・Greenletではユーザが明示的にコンテキストスィッチをする必要がある。  
・SIPだとリクエストを受け取った場合、送信元へのレスポンスとリクエストを同時に行うため、単純なサーバ動作とはならない。
・参考URL→  http://eventlet.net/doc/design_patterns.html

2017/1/22
・RequestURIがRFC上でBNF記法で書かれていたので、せっかくなのでgrakoを用いてASTで解析してみる。JSON形式で出力されるらしい。当然普通にparseしたほうが早いけど。
・しばらくgrakoとASTで遊べそう。(*^-^*)
